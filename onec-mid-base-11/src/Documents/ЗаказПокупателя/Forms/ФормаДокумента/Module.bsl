
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	
		//{{ Карпов А.А., ДЗ_11.2, 10.11.24:
	//Проверяем есть ли на Форме уже такой элемент, чтобы не создавать его несколько раз
	//
	//Если Элементы.Найти("НашНужныйЭлемент") = Неопределено  Тогда
	////Сначала просто добавляем Элемент в коллекцию Элементов
	//НовыйЭлемент = Элементы.Добавить("НашНужныйЭлемент", Тип("ПолеФормы"));
	//НовыйЭлемент.ПутьКДанным = "Объект.НашНужныйРеквизит";
	//НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
	//НовыйЭлемент.Заголовок = "Программно добавленное поле ввода";
	
	Группа1 = Элементы.Добавить("ГруппаШапка", Тип("ГруппаФормы"), ЭтаФорма.Элементы.ГруппаНомерДата);
	Группа1.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	//	Группа1.Заголовок = "Добавленные реквизиты объекта:";

	Если Элементы.Найти("ДЗ_СогласованнаяСкидка") = Неопределено  Тогда
		//Сначала просто добавляем Элемент в коллекцию Элементов
		НовыйЭлемент = Элементы.Добавить("ДЗ_СогласованнаяСкидка", Тип("ПолеФормы"), Группа1);
		НовыйЭлемент.ПутьКДанным = "Объект.ДЗ_СогласованнаяСкидка";
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.Заголовок = "Согласованная скидка"; 
		
		Элементы.ДЗ_СогласованнаяСкидка.УстановитьДействие("ПриИзменении", "ДЗ_СогласованнаяСкидкаПриИзменении"); 

		
		КомандаПересчитатьТаблицу = Команды.Добавить("ПересчитатьТаблицу");
		КомандаПересчитатьТаблицу.Заголовок = "Пересчитать таблицу"; 
		КомандаПересчитатьТаблицу.Действие = "ДЗ_ПересчитатьТаблицу";
		
		КнопкаКомандаПересчитатьТаблицу = Элементы.Добавить("КомандаПересчитатьТаблицу", Тип("КнопкаФормы"), Группа1);
		КнопкаКомандаПересчитатьТаблицу.ИмяКоманды = "ПересчитатьТаблицу"; 
		КнопкаКомандаПересчитатьТаблицу.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
		
		Группа1.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
		
	КонецЕсли; 
	
	Если Элементы.Найти("ДЗ_КонтактноеЛицо") = Неопределено  Тогда
		//Сначала просто добавляем Элемент в коллекцию Элементов
		НовыйЭлемент = Элементы.Добавить("ДЗ_КонтактноеЛицо", Тип("ПолеФормы"), Элементы.ГруппаШапкаПраво);
		НовыйЭлемент.ПутьКДанным = "Объект.ДЗ_КонтактноеЛицо";
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.Заголовок = "Контактное лицо";
	КонецЕсли; 
	// }}
	
	
	//{{ Карпов А.А., ДЗ_11.2, 05.11.24:
	//Добавление команды формы (команда, выводящая предупреждение)
	//Команда = Команды.Добавить("ПоказатьПредупреждение");
	//Команда.Заголовок = "Показать Предупреждение"; 
	//Команда.Действие = "КомандаПоказатьПредупреждение";
	//
	//КнопкаФормы = Элементы.Добавить("КнопкаПоказатьПредупреждение", Тип("КнопкаФормы"), ЭтаФорма);
	//КнопкаФормы.ИмяКоманды = "ПоказатьПредупреждение"; 
	//КнопкаФормы.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
	//// }}          
	//
	////{{ Карпов А.А., ДЗ_11.2, 10.11.24: 
	//Группа = Элементы.Добавить("ГруппаШапка", Тип("ГруппаФормы"), ЭтаФорма);
	//Группа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	//Группа.Заголовок = "Добавленные реквизиты объекта:";     
	//
	//ТипРеквизита  = Новый ОписаниеТипов("СправочникСсылка.net_Поставщики");    
	//
	//ДобавляемыеРеквизиты = Новый Массив;  
	//РеквизитФормы = Новый РеквизитФормы("РеквизитПоставщик", ТипРеквизита, "", "Поставщик");
	//ДобавляемыеРеквизиты.Добавить(РеквизитФормы);
	//
	//ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	//
	//ПолеВвода = Элементы.Добавить("ЭлементПоставщик", Тип("ПолеФормы"), Группа);
	//ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
	//ПолеВвода.ПутьКДанным = "РеквизитПоставщик";
	//ПолеВвода.УстановитьДействие("ПриИзменении", "ПриИзмененииПоставщика");
	// }}	
	
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура ДЗ_СогласованнаяСкидкаПриИзменении(Элемент)
//{{ Карпов А.А., ДЗ_11.2, 12.11.24:
	
Если Объект.Товары.Количество()>0 ИЛИ Объект.Услуги.Количество()>0 Тогда
	
	Результат = Ждать ВопросАсинх(НСтр("ru='Изменен процент скидки. Пересчитать таблицы товаров и услуг?'"), РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);	
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		ДЗ_ПересчетЦенСоскидкой(Объект);
		
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда 
		Возврат; 
	Иначе
		текст = НСтр("ru='Ответ не получен!'");
		Сообщить(текст);
	КонецЕсли;   	
	
КонецЕсли;

// }}
КонецПроцедуры

&НаКлиенте
Процедура ДЗ_ПересчитатьТаблицу(Команда)
//{{ Карпов А.А., ДЗ_11.2, 13.11.24:
	ДЗ_ПересчетЦенСоскидкой(Объект);	
// }}	
КонецПроцедуры 

&НаКлиенте
Процедура ДЗ_ПересчетЦенСоскидкой(Объект)
//{{ Карпов А.А., ДЗ_11.2, 13.11.24:
	Для Каждого СтрокаТовары из Объект.Товары Цикл
		ТекущиеДанные = СтрокаТовары;
		РассчитатьСуммуСтроки(ТекущиеДанные);
	КонецЦикла;
	
	Для Каждого СтрокаУслуги из Объект.Услуги Цикл
		ТекущиеДанные = СтрокаУслуги;
		РассчитатьСуммуСтроки(ТекущиеДанные);
	КонецЦикла;
// }}	
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	//{{ Карпов А.А., ДЗ_11.2, 10.11.24:
	СуммарнаяСкидка = Объект.ДЗ_СогласованнаяСкидка + ТекущиеДанные.Скидка;
	
	Если СуммарнаяСкидка > 100 Тогда
		СуммарнаяСкидка = 100;
	КонецЕсли;
	
	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество*(1-СуммарнаяСкидка/100);
	РассчитатьСуммуДокумента();
	
	
	//КоэффициентСкидки = 1 - ТекущиеДанные.Скидка / 100;
	//ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки;
	// }}
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти
